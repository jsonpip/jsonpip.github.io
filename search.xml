<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>应急响应常用命令</title>
      <link href="/2023/03/13/ying-ji-xiang-ying-chang-yong-ming-ling/"/>
      <url>/2023/03/13/ying-ji-xiang-ying-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="linux常用排查命令"><a href="#linux常用排查命令" class="headerlink" title="linux常用排查命令"></a>linux常用排查命令</h1><h2 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h2><p>查看用户信息文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看影子文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/etc/shadow<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看系统是否还存在其他的特权账户，uid为0，默认系统只存在root一个特权账户）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">awk</span> -F: <span class="token string">'$3==0&#123;print $1&#125;'</span> /etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看当前登录用户（tty 本地登陆  pts 远程登录）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">who</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看系统信息，想知道某一时刻用户的行为</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">w<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看登陆多久、多少用户，负载</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">uptime</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>删除用户密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">passwd</span> <span class="token parameter variable">-d</span> username<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看密码文件上一次修改的时间，如果最近被修改过，那就可能存在问题。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">stat</span> /etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看除了不可登录以外的用户都有哪些，有没有新增的</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /etc/passwd <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> nologin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看哪些用户为root权限，有没有新增的</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /etc/passwd <span class="token operator">|</span> <span class="token function">grep</span> x:0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看哪些用户使用shell</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /etc/passwd <span class="token operator">|</span> <span class="token function">grep</span> /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查询可以远程登录的账号</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">awk</span> <span class="token string">'/\$1|\$6/&#123;print $1&#125;'</span> /etc/shadow<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="历史命令"><a href="#历史命令" class="headerlink" title="历史命令"></a>历史命令</h2><blockquote><p>.bash_history保存了用户的登录所操作的命令信息</p></blockquote><p>查看历史命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">history</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>保存历史命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> .bash_history <span class="token operator">>></span>history.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="检查端口"><a href="#检查端口" class="headerlink" title="检查端口"></a>检查端口</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root@ecs-300419:~<span class="token comment"># netstat -antp  #查看端口</span>Active Internet connections <span class="token punctuation">(</span>servers and established<span class="token punctuation">)</span>Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:80              <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">2746202</span>/docker-prox tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">127.0</span>.0.53:53           <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">478</span>/systemd-resolve 查看对应链接的文件路径root@ecs-300419:~<span class="token comment"># ls -l /proc/1132/exe  #查看对应链接的文件路径</span>lrwxrwxrwx <span class="token number">1</span> root root <span class="token number">0</span> Mar <span class="token number">13</span> <span class="token number">13</span>:19 /proc/1132/exe -<span class="token operator">></span> /usr/sbin/sshdroot@ecs-300419:~<span class="token comment"># ls -l /proc/*/exe | grep /usr/bin/sshd #如果我们知道恶意程序的启动文件大致位置，可以使用这个发现无文件的恶意进程</span>ls: cannot <span class="token builtin class-name">read</span> symbolic <span class="token function">link</span> <span class="token string">'/proc/95/exe'</span><span class="token builtin class-name">:</span> No such <span class="token function">file</span> or directoryls: cannot <span class="token builtin class-name">read</span> symbolic <span class="token function">link</span> <span class="token string">'/proc/96/exe'</span><span class="token builtin class-name">:</span> No such <span class="token function">file</span> or directoryls: cannot <span class="token builtin class-name">read</span> symbolic <span class="token function">link</span> <span class="token string">'/proc/98/exe'</span><span class="token builtin class-name">:</span> No such <span class="token function">file</span> or directoryls: cannot <span class="token builtin class-name">read</span> symbolic <span class="token function">link</span> <span class="token string">'/proc/9/exe'</span><span class="token builtin class-name">:</span> No such <span class="token function">file</span> or directorylrwxrwxrwx <span class="token number">1</span> root            root            <span class="token number">0</span> Mar <span class="token number">13</span> <span class="token number">13</span>:19 /proc/1132/exe -<span class="token operator">></span> /usr/sbin/sshdlrwxrwxrwx <span class="token number">1</span> root            root            <span class="token number">0</span> Mar <span class="token number">13</span> <span class="token number">13</span>:20 /proc/2178515/exe -<span class="token operator">></span> /usr/sbin/sshdlrwxrwxrwx <span class="token number">1</span> root            root            <span class="token number">0</span> Mar <span class="token number">13</span> <span class="token number">13</span>:20 /proc/2179913/exe -<span class="token operator">></span> /usr/sbin/sshdlrwxrwxrwx <span class="token number">1</span> root            root            <span class="token number">0</span> Mar <span class="token number">13</span> <span class="token number">13</span>:20 /proc/2190672/exe -<span class="token operator">></span> /usr/sbin/sshdlrwxrwxrwx <span class="token number">1</span> root            root            <span class="token number">0</span> Mar <span class="token number">13</span> <span class="token number">13</span>:34 /proc/2194926/exe -<span class="token operator">></span> /usr/sbin/sshdlrwxrwxrwx <span class="token number">1</span> root            root            <span class="token number">0</span> Mar <span class="token number">13</span> <span class="token number">13</span>:34 /proc/2194928/exe -<span class="token operator">></span> /usr/sbin/sshd<span class="token function">netstat</span> <span class="token parameter variable">-antlp</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">172.16</span>.222.198 <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $7&#125;'</span> <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-f1</span> -d<span class="token string">"/"</span>  <span class="token comment">#通过可疑的ip地址获取程序pid</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="查看进程"><a href="#查看进程" class="headerlink" title="查看进程"></a>查看进程</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ps</span> <span class="token parameter variable">-aux</span> <span class="token comment">#查看进程信息</span><span class="token function">ps</span> <span class="token parameter variable">-aux</span> <span class="token operator">|</span><span class="token function">grep</span> pid <span class="token comment">#查看相关pid对应程序</span><span class="token function">ps</span> <span class="token parameter variable">-eLf</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token function">ssh</span><span class="token operator">|</span> <span class="token function">wc</span> –l <span class="token comment">#监控某一应用线程数（如ssh）</span><span class="token function">netstat</span> <span class="token parameter variable">-n</span> <span class="token operator">|</span> <span class="token function">grep</span> tcp <span class="token operator">|</span> <span class="token function">grep</span> 侦听端口 <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span> <span class="token comment">#监控网络客户连接数</span><span class="token function">ps</span> aux <span class="token parameter variable">--sort</span><span class="token operator">=</span>pcpu <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-10</span> <span class="token comment"># 查看cpu占用率前十的进程，有时候可以发现</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="开机启动项"><a href="#开机启动项" class="headerlink" title="开机启动项"></a>开机启动项</h2><blockquote><p>启动项文件</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">more</span> /etc/rc.local /etc/rc.d/rc<span class="token punctuation">[</span><span class="token number">0</span>~6<span class="token punctuation">]</span>.d<span class="token function">ls</span> <span class="token parameter variable">-l</span> /etc/rc.d/rc3.d/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h2><blockquote><p>#常见的定时任务</p><p>&#x2F;var&#x2F;spool&#x2F;cron&#x2F;*  #centos的</p><p>&#x2F;var&#x2F;spool&#x2F;cron&#x2F;crontabs&#x2F;* #ubuntu的</p><p>&#x2F;var&#x2F;spool&#x2F;anacron&#x2F;*</p><p>&#x2F;etc&#x2F;crontab</p><p>&#x2F;etc&#x2F;anacrontab  #异步定时</p><p>&#x2F;etc&#x2F;cron.hourly&#x2F;* </p><p>&#x2F;etc&#x2F;cron.daily&#x2F;* </p><p>&#x2F;etc&#x2F;cron.weekly&#x2F;</p><p>&#x2F;etc&#x2F;cron.monthly&#x2F;*</p><p>一篇不错的木马查杀文章：<a href="https://www.likecs.com/show-307619683.html">https://www.likecs.com/show-307619683.html</a></p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">crontab</span>  <span class="token parameter variable">-l</span> <span class="token comment">#查看定时任务</span><span class="token function">crontab</span>  <span class="token parameter variable">-e</span> <span class="token comment">#编辑定时任务</span><span class="token function">crontab</span> <span class="token parameter variable">-crontab</span> <span class="token parameter variable">-u</span> root <span class="token parameter variable">-l</span> <span class="token comment">#查看root用户计划任务</span><span class="token function">ls</span> /var/spool/cron/ 查看每个用户的执行计划<span class="token function">sed</span> <span class="token string">'/gcc.sh/d'</span> /etc/crontab <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> 0000 /etc/crontab <span class="token operator">&amp;&amp;</span> chattr +i /etc/crontab  <span class="token comment">#删除计划任务且控制计划任务不能写东西</span>常见的定时任务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chkconfig</span> <span class="token comment">#查看开机启动项目</span><span class="token function">chkconfig</span>  <span class="token parameter variable">--list</span> <span class="token comment">#查看服务自启状态</span>systemctl list-unit-files <span class="token operator">|</span><span class="token function">grep</span> enabled <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="查文件"><a href="#查文件" class="headerlink" title="查文件"></a>查文件</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">find查找指定的文件：find /home1 <span class="token parameter variable">-name</span> *.php <span class="token operator">!</span> <span class="token parameter variable">-name</span> index.phpfind查看最近一天修改的文件: <span class="token function">find</span> / <span class="token parameter variable">-mtime</span> <span class="token parameter variable">-1</span> <span class="token operator">></span> /etc/aa.txt<span class="token punctuation">(</span>查看修改的文件并保存到aa的txt文档<span class="token punctuation">)</span>查找并删除,利用 xargs:find <span class="token builtin class-name">.</span> <span class="token parameter variable">-name</span> .svn <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">rm</span> –rf<span class="token function">find</span> / <span class="token parameter variable">-size</span> +10000k -print：查找大于10000k的文件md5sum <span class="token parameter variable">-b</span> filename：查看文件的md5值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="top命令"><a href="#top命令" class="headerlink" title="top命令"></a>top命令</h2><blockquote><p>top命令是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于Windows的任务管理器。</p></blockquote><ul><li><p>默认top是根据cpu的占用情况进行排序的</p><p><img src="https://cdn.jsdelivr.net/gh/jsonpip/blogimages@main/img/image-20230313154726195.png" alt="image-20230313154726195"></p></li></ul><p>可通过按“b”键切换，可切换到按照内存使用情况进行排序</p><p>top -p pid 监控指定进程</p><p><img src="https://cdn.jsdelivr.net/gh/jsonpip/blogimages@main/img/image-20230313155059024.png" alt="image-20230313155059024"></p><p>free 查看当前系统内存使用情况</p><p><img src="https://cdn.jsdelivr.net/gh/jsonpip/blogimages@main/img/image-20230313155144772.png" alt="image-20230313155144772"></p><p>top -b -n1 |head</p><p><img src="https://cdn.jsdelivr.net/gh/jsonpip/blogimages@main/img/image-20230313155225121.png" alt="image-20230313155225121"></p><h2 id="host文件"><a href="#host文件" class="headerlink" title="host文件"></a>host文件</h2><blockquote><p>恶意挖矿攻击会利用混淆，加密，加壳等手段对抗检测，除此以外为了保障目标主机用于自身挖矿等独占性，通常还会出现黑吃黑的行为，例如修改host文件，屏蔽其他恶意挖矿程序的域名访问；搜索并终止其他挖矿程序进程；通过iptables修改防火墙策略，甚至主动封堵某些攻击漏洞入口以避免其他恶意挖矿攻击利用</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Diff"><a href="#Diff" class="headerlink" title="Diff"></a>Diff</h2><blockquote><p>用diff命令把重要的目录做对比，分别对比入侵环境和纯净环境下的不同</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">diff</span> <span class="token parameter variable">-r</span> <span class="token punctuation">&#123;</span>生产dir<span class="token punctuation">&#125;</span> <span class="token punctuation">&#123;</span>测试dir<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h2><blockquote><p>日志默认存放位置：&#x2F;var&#x2F;log&#x2F;</p><p>查看日志配置情况：more &#x2F;etc&#x2F;rsyslog.conf</p><table><thead><tr><th>日志文件</th><th>说明</th></tr></thead><tbody><tr><td>&#x2F;var&#x2F;log&#x2F;cron</td><td>记录了系统定时任务相关的日志</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;cups</td><td>记录打印信息的日志</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;dmesg</td><td>记录了系统在开机时内核自检的信息，也可以使用dmesg命令直接查看内核自检信息</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;mailog</td><td>记录邮件信息</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;message</td><td>记录系统重要信息的日志。这个日志文件中会记录Linux系统的绝大多数重要信息，如果系统出现问题时，首先要检查的就应该是这个日志文件</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;btmp</td><td>记录错误登录日志，这个文件是二进制文件，不能直接vi查看，而要使用lastb命令查看</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;lastlog</td><td>记录系统中所有用户最后一次登录时间的日志，这个文件是二进制文件，不能直接vi，而要使用lastlog命令查看</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;wtmp</td><td>永久记录所有用户的登录、注销信息，同时记录系统的启动、重启、关机事件。同样这个文件也是一个二进制文件，不能直接vi，而需要使用last命令来查看</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;utmp</td><td>记录当前已经登录的用户信息，这个文件会随着用户的登录和注销不断变化，只记录当前登录用户的信息。同样这个文件不能直接vi，而要使用w,who,users等命令来查询</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;secure</td><td>记录验证和授权方面的信息，只要涉及账号和密码的程序都会记录，比如SSH登录，su切换用户，sudo授权，甚至添加用户和修改用户密码都会记录在这个日志文件中</td></tr></tbody></table></blockquote><ul><li>定位有多少IP在爆破主机的root账号：</li></ul><pre class="line-numbers language-bahs" data-language="bahs"><code class="language-bahs">grep &quot;Failed password for root&quot; &#x2F;var&#x2F;log&#x2F;secure | awk &#39;&#123;print $11&#125;&#39; | sort | uniq -c | sort -nr | more<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>定位有哪些IP在爆破</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">grep</span> <span class="token string">"Failed password"</span> /var/log/secure<span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-E</span> <span class="token parameter variable">-o</span> <span class="token string">"(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)"</span><span class="token operator">|</span><span class="token function">uniq</span> <span class="token parameter variable">-c</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>爆破用户名字典是什么？</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">grep</span> <span class="token string">"Failed password"</span> /var/log/secure<span class="token operator">|</span>perl <span class="token parameter variable">-e</span> <span class="token string">'while($_=&lt;>)&#123; /for(.*?) from/; print "$1\n";&#125;'</span><span class="token operator">|</span><span class="token function">uniq</span> -c<span class="token operator">|</span><span class="token function">sort</span> <span class="token parameter variable">-nr</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>登录成功的ip有哪些</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">grep</span> <span class="token string">"Accepted "</span> /var/log/secure <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $11&#125;'</span> <span class="token operator">|</span> <span class="token function">sort</span> <span class="token operator">|</span> <span class="token function">uniq</span> <span class="token parameter variable">-c</span> <span class="token operator">|</span> <span class="token function">sort</span> <span class="token parameter variable">-nr</span> <span class="token operator">|</span> <span class="token function">more</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>登录成功的日期、用户名、IP</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">grep</span> <span class="token string">"Accepted "</span> /var/log/secure <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $1,$2,$3,$9,$11&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="查看命令状态"><a href="#查看命令状态" class="headerlink" title="查看命令状态"></a>查看命令状态</h2><blockquote><p>很多情况下，存在ps、netstat等一些常见命令被替换，可利用stat查看该状态，查看其修改时间</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root@ecs-300419:/var/log<span class="token comment"># stat /bin/netstat</span>  File: /bin/netstat  Size: <span class="token number">158288</span>          Blocks: <span class="token number">312</span>        IO Block: <span class="token number">4096</span>   regular <span class="token function">file</span>Device: fc01h/64513d    Inode: <span class="token number">1716737</span>     Links: <span class="token number">1</span>Access: <span class="token punctuation">(</span>0755/-rwxr-xr-x<span class="token punctuation">)</span>  Uid: <span class="token punctuation">(</span>    <span class="token number">0</span>/    root<span class="token punctuation">)</span>   Gid: <span class="token punctuation">(</span>    <span class="token number">0</span>/    root<span class="token punctuation">)</span>Access: <span class="token number">2023</span>-03-13 03:55:08.418410224 +0800Modify: <span class="token number">2019</span>-02-02 02:07:53.000000000 +0800Change: <span class="token number">2022</span>-02-25 <span class="token number">12</span>:41:57.932000000 +0800 Birth: -<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="文件清除"><a href="#文件清除" class="headerlink" title="文件清除"></a>文件清除</h2><p>很多时候会遇到无法常看文件权限或是病毒在一直向某个文件写入程序，可尝试如下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lsattr <span class="token punctuation">[</span>恶意文件绝对路径<span class="token punctuation">]</span> 命令查看权限使用chattr <span class="token parameter variable">-i</span> <span class="token punctuation">[</span>恶意文件绝对路径<span class="token punctuation">]</span>解除文件锁定后删除。<span class="token function">chmod</span> 0000 /lib/libudev.so <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> /lib/libudev.so <span class="token operator">&amp;&amp;</span> chattr +i /lib/（chattr +i不让lib文件被写入删除）结束某一进程：Kill  <span class="token parameter variable">-9</span>  pid<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker</title>
      <link href="/2023/03/13/docker/"/>
      <url>/2023/03/13/docker/</url>
      
        <content type="html"><![CDATA[<h2 id="Docker-compose"><a href="#Docker-compose" class="headerlink" title="Docker-compose"></a>Docker-compose</h2><p>三步骤：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Dockerfile <span class="token comment">#Dockerfile 是一个用来构建镜像的文本文件，文本内容包含了一条条构建镜像所需的指令和说明。保证我们的项目在任何地方运行</span>docker-compose.yml <span class="token comment"># Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过 Compose，您可以使用 YML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以从 YML 文件配置中创建并启动所有服务。</span>Docker-compose up<span class="token comment">#启动项目</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>官网体验</p><p><a href="https://docs.docker.com/compose/gettingstarted/">https://docs.docker.com/compose/gettingstarted/</a></p><p>用docker-compose部署redis</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">应用app.pydockerfile <span class="token comment">#应用打包为镜像</span>docker-compose.yml文件 <span class="token comment">#定义整个服务，需要的环境。web、redis 完整的上线服务</span><span class="token function">docker-compose</span> <span class="token parameter variable">-up</span> <span class="token comment">#启动compose项目</span>流程<span class="token number">1</span>.创建网络<span class="token number">2</span>.执行docker-compose.yml<span class="token number">3</span>.启动服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>docker小结</p><p>1.docker镜像。run&#x3D;&gt;容器</p><p>2.dockerfile构建镜像（服务打包）</p><p>3.docker-compose 启动项目（编排、多个微服务&#x2F;环境）</p><p>4.docker网络</p><h3 id="yaml规则"><a href="#yaml规则" class="headerlink" title="yaml规则"></a>yaml规则</h3><p>Docker-compose.yml 核心</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#3层</span>version:<span class="token string">''</span> <span class="token comment">#版本</span>services: <span class="token comment">#服务</span>服务1:web<span class="token comment">#服务配置</span>imagesbuildnetwork。。。服务2:redis。。。服务3.redis<span class="token comment">#其他配置 网络/卷 全局规则</span>volumesnetworksconfigs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Docker-swarm"><a href="#Docker-swarm" class="headerlink" title="Docker swarm"></a>Docker swarm</h2><h4 id="工作模式"><a href="#工作模式" class="headerlink" title="工作模式"></a>工作模式</h4><p>管理节点</p><p>工作节点</p><p>一般都有三个管理节点</p><p><img src="/Users/guan/Desktop/Markdown/Docker/src=http%253A%252F%252Fupload.techweb.com.cn%252Fs%252F640%252F2021%252F0827%252F1630059366565.png&refer=http%253A%252F%252Fupload.techweb.com.png" alt="img"></p><p>初始化节点 docker swarm init</p><p>Docker swarm join 加入一个节点</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#获取令牌</span><span class="token function">docker</span> swarm join-token manager<span class="token function">docker</span> swarm join-token worker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>1.生成主节点</p><p>2.加入（管理者、worker）</p><h4 id="raft协议"><a href="#raft协议" class="headerlink" title="raft协议"></a>raft协议</h4><p>保证大多数节点存活才可以用。只要大于&gt;1,集群至少大于3台！</p><p>work就是工作的、管理节点操作！3台机器设置为了管理节点</p><p>集群可用！三个主节点。&gt;1台管理节点存活</p><p>raft协议：保证大多数节点存活，才可以使用，高可用</p><h4 id="体会"><a href="#体会" class="headerlink" title="体会"></a>体会</h4><p>弹性、扩缩容 集群</p><p>以后告别docker run</p><p>Docker-compose up 启动一个项目。单机</p><p>集群：swarm docker service</p><p>容器 &#x3D;&#x3D;服务</p><p>容器&#x3D;&#x3D;服务&#x3D;&#x3D;副本</p><p>redis 服务&#x3D;&#x3D;10副本 （同时开启10个容器）</p><p>体验：创建服务、动态扩展服务、动态更新服务。</p><p>需要掌握：搭建集群、启动服务、动态管理容器</p><h4 id="概念总结"><a href="#概念总结" class="headerlink" title="概念总结"></a>概念总结</h4><h5 id="swarm"><a href="#swarm" class="headerlink" title="swarm"></a>swarm</h5><p>集群的管理和编号。docker可以初始化一个swarm集群，其它节点都可以加入。（管理、工作者）</p><h5 id="node"><a href="#node" class="headerlink" title="node"></a>node</h5><p>就是一个docker节点。多个节点就组成一个网络集群</p><h5 id="service"><a href="#service" class="headerlink" title="service"></a>service</h5><p>任务，可以在管理节点或者工作节点来运行。核心！！！用户访问！</p><h5 id="task"><a href="#task" class="headerlink" title="task"></a>task</h5><p>容器内的命令，细节任务</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 命令</title>
      <link href="/2023/03/13/linux-ming-ling/"/>
      <url>/2023/03/13/linux-ming-ling/</url>
      
        <content type="html"><![CDATA[<h2 id="开关机命令"><a href="#开关机命令" class="headerlink" title="开关机命令"></a>开关机命令</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java">sync #<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="lsof命令"><a href="#lsof命令" class="headerlink" title="lsof命令"></a>lsof命令</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java">lsof <span class="token operator">-</span>i #列出所有网络连接，<span class="token operator">-</span>i显示所有监听和建立等的网络链接lsof <span class="token operator">-</span>u root #列出特定用户所有打开文件lsof <span class="token operator">-</span>i <span class="token constant">TCP</span><span class="token operator">:</span><span class="token number">22</span> #列出指定端口的所有进程lsof <span class="token operator">-</span>i <span class="token number">4</span><span class="token operator">/</span><span class="token number">6</span> #列出ipv4或者ipv6打开文件lsof <span class="token operator">-</span>i <span class="token constant">TCP</span><span class="token operator">:</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">1024</span> #列出tcp端口在<span class="token number">1</span><span class="token operator">-</span><span class="token number">1024</span>的所打开文件的所有运行进程lsof <span class="token operator">-</span>i <span class="token operator">-</span>u<span class="token operator">^</span>root #排除用户用‘<span class="token operator">^</span>’字符lsof <span class="token operator">-</span>p <span class="token number">1</span> #显示进程<span class="token number">1</span>使用情况kill <span class="token operator">-</span><span class="token number">9</span> `lsof <span class="token operator">-</span>t <span class="token operator">-</span>u root` #杀死特定用户的所有进程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
